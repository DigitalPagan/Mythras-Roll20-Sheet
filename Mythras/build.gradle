plugins {
    id 'base'
}

defaultTasks 'upload'

task clean_artifacts(type: Delete, description: "Delete the existing Mythras.html and Mythras.css") {
    delete file("$projectDir/Mythras.min.html"), file("$projectDir/Mythras.min.css")
}

task assemble_js(type: ProcessResources, group: "assemble", description: "Compiles Mythras.js from sources.") {
    from('src') {
        include 'Mythras.js'
    }

    into "$projectDir/build"

    def props = [:]
    expand(props)
}

task minify_js(type:Exec) {
    executable("bash")
    args "-c", "terser -o ./build/Mythras.min.js ./build/Mythras.js"
}

task assemble_html(type: ProcessResources, group: "assemble", description: "Compiles Mythras.html from sources.") {
    from('src') {
        include 'Mythras.html'
    }

    into "$projectDir/build"

    def props = [:]
    expand(props)
}

task assemble_css(type: ProcessResources, group: "assembe", description: "Compiles Mythras.css from sources.") {
    from('src') {
        include 'Mythras.css'
    }

    into "$projectDir/build"

    def props = [:]
    expand(props)
}

task minify_css(type:Exec) {
    executable("bash")
    args "-c", "html-minifier -c ./configs/html-minifier.conf -o ./Mythras.min.css ./build/Mythras.css"
}

task minify_html(type:Exec) {
    executable("bash")
    //args "-c", "cp ./build/Mythras.html ./Mythras.min.html"
    args "-c", "html-minifier -c ./configs/html-minifier.conf -o ./Mythras.min.html ./build/Mythras.html"
}

task upload(type:Exec) {
    commandLine "python3", "upload2roll20.py"
}

clean.dependsOn(clean_artifacts)
assemble_js.dependsOn(clean)
minify_js.dependsOn(assemble_js)
assemble_html.dependsOn(minify_js)
assemble_css.dependsOn(clean)
assemble.dependsOn(assemble_html)
assemble.dependsOn(assemble_css)
build.dependsOn(minify_html, minify_css)
upload.dependsOn(build)
